{"ast":null,"code":"var _jsxFileName = \"/Users/hishamraihan/Desktop/ReactPractice2022/Section10SideEffectsReducersContentAPI/01-starting-project/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = props => {\n  _s();\n\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false); // helps us makes sure we have one code in one place that re-runs when ever the dependencies change, re-run logic when data/state changes\n  // code that should be in response to something\n\n  useEffect(() => {\n    // this will run once when the component is first rendered\n    const identifier = setTimeout(() => {\n      console.log('Checking');\n      setFormIsValid( // side effect of user entering data\n      enteredEmail.includes('@') && enteredPassword.trim().length > 6);\n    }, 500); // setFormIsValid(\n    //   // side effect of user entering data\n    //   enteredEmail.includes('@') && enteredPassword.trim().length > 6\n    // );\n    // adding a pointer \n    // after every log in then the effect will run again only if either setFormIsValid, entered email and password changed. If it did not change then it will not run\n    // add as dependencies what we are using in the side effect function\n\n    return () => {\n      console.log('clean up');\n      clearTimeout(identifier);\n    }; // this will run as a clean up process\n  }, [enteredEmail, enteredPassword]); //makes sure we have one code in one place that reruns when ever a dependency changes\n  //  without dependencies the code will run once\n  // add as dependencies what we are using in the side effect function\n\n  const emailChangeHandler = event => {\n    // side effect\n    setEnteredEmail(event.target.value); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    setEnteredPassword(event.target.value); // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: enteredEmail,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"LXbrkIlmixekYK8sfxwnk7twvaE=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/hishamraihan/Desktop/ReactPractice2022/Section10SideEffectsReducersContentAPI/01-starting-project/src/components/Login/Login.js"],"names":["React","useState","useEffect","Card","classes","Button","Login","props","enteredEmail","setEnteredEmail","emailIsValid","setEmailIsValid","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","identifier","setTimeout","console","log","includes","trim","length","clearTimeout","emailChangeHandler","event","target","value","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\nconst Login = (props) => {\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // helps us makes sure we have one code in one place that re-runs when ever the dependencies change, re-run logic when data/state changes\n  // code that should be in response to something\n  useEffect(() => {\n    // this will run once when the component is first rendered\n    const identifier = setTimeout(() => {\n      console.log('Checking');\n      setFormIsValid(\n        // side effect of user entering data\n        enteredEmail.includes('@') && enteredPassword.trim().length > 6\n      );\n    }, 500)\n    // setFormIsValid(\n    //   // side effect of user entering data\n    //   enteredEmail.includes('@') && enteredPassword.trim().length > 6\n    // );\n    // adding a pointer \n    // after every log in then the effect will run again only if either setFormIsValid, entered email and password changed. If it did not change then it will not run\n    // add as dependencies what we are using in the side effect function\n    return () => {\n      console.log('clean up'); \n      clearTimeout(identifier)\n    } // this will run as a clean up process\n  }, [enteredEmail, enteredPassword]) //makes sure we have one code in one place that reruns when ever a dependency changes\n  //  without dependencies the code will run once\n  // add as dependencies what we are using in the side effect function\n\n\n  const emailChangeHandler = (event) => {\n    // side effect\n    setEnteredEmail(event.target.value);\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const passwordChangeHandler = (event) => {\n    setEnteredPassword(event.target.value);\n\n    // setFormIsValid(\n    //   event.target.value.trim().length > 6 && enteredEmail.includes('@')\n    // );\n  };\n\n  const validateEmailHandler = () => {\n    setEmailIsValid(enteredEmail.includes('@'));\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(enteredEmail, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${emailIsValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={enteredEmail}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${passwordIsValid === false ? classes.invalid : ''\n            }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}