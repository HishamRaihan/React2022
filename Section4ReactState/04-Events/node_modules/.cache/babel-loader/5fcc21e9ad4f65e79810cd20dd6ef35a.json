{"ast":null,"code":"var _jsxFileName = \"/Volumes/Heshows1TB/React Practice/Section3ReactBasics/01-starting-setup/src/components/ExpenseItem.js\";\n// a component in react is a Javascript function\nimport './ExpenseItem.css'; // props objetcs recievs the key value paoirs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ExpenseItem(props) {\n  const month = props.date.toLocaleString('en-US', {\n    month: 'long'\n  });\n  const day = props.date.toLocaleString('en-US', {\n    day: 'long'\n  });\n  const year = props.date.getFullYear();\n  return (\n    /*#__PURE__*/\n    // easiest work around is wrapping into another div because we can only have one main element and it can have multiple elements inside\n    // toLocaleString() helps format date to\n    _jsxDEV(\"div\", {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: month\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$ \", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  ); // <input type={'text'} className=\"inputPlace\" placeholder=\"type\"></input> \n}\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Volumes/Heshows1TB/React Practice/Section3ReactBasics/01-starting-setup/src/components/ExpenseItem.js"],"names":["ExpenseItem","props","month","date","toLocaleString","day","year","getFullYear","title","amount"],"mappings":";AAAA;AACA,OAAO,mBAAP,C,CACA;;;;AACA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAMC,KAAK,GAAGD,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEF,IAAAA,KAAK,EAAE;AAAT,GAAnC,CAAd;AACA,QAAMG,GAAG,GAAGJ,KAAK,CAACE,IAAN,CAAWC,cAAX,CAA0B,OAA1B,EAAmC;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAAnC,CAAZ;AACA,QAAMC,IAAI,GAAGL,KAAK,CAACE,IAAN,CAAWI,WAAX,EAAb;AAEA;AAAA;AACE;AACA;AACA;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,gCACE;AAAA,oBAAML;AAAN;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMI;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,oBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAA,oBAAKJ,KAAK,CAACO;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,2BAAwCP,KAAK,CAACQ,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF,IAL0B,CAoB1B;AACD;;KArBQT,W;AAuBT,eAAeA,WAAf","sourcesContent":["// a component in react is a Javascript function\nimport './ExpenseItem.css'\n// props objetcs recievs the key value paoirs\nfunction ExpenseItem(props) {\n  const month = props.date.toLocaleString('en-US', { month: 'long' })\n  const day = props.date.toLocaleString('en-US', { day: 'long' })\n  const year = props.date.getFullYear()\n\n  return (\n    // easiest work around is wrapping into another div because we can only have one main element and it can have multiple elements inside\n    // toLocaleString() helps format date to\n    <div className='expense-item'>\n      <div>\n        <div>{month}</div>\n        <div>{year}</div>\n        <div>{day}</div>\n      </div>\n      <div className='expense-item__description'>\n        <h2>{props.title}</h2>\n        <div className='expense-item__price'>$ {props.amount}</div>\n      </div>\n    </div>\n  )\n  // <input type={'text'} className=\"inputPlace\" placeholder=\"type\"></input> \n}\n\nexport default ExpenseItem"]},"metadata":{},"sourceType":"module"}