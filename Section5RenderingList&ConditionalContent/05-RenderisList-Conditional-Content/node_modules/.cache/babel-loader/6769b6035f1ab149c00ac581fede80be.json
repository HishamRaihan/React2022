{"ast":null,"code":"var _jsxFileName = \"/Volumes/Heshows1TB/React Practice/Section4ReactState/04-Events/src/components/Expenses/ExpenseItem.js\",\n    _s = $RefreshSig$();\n\n// a component in react is a Javascript function\nimport React, { useState } from \"react\";\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from \"../UI/Card\"; // props objetcs recievs the key value pairs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  _s();\n\n  // wants a default state and updated function that udpates the value\n  // this tells react that we want to update or change -> component should be re-evaluated\n  const [[], setTitle] = useState(props.title); //  array destructuring 1st current state value and 2nd value is a function for updating that value\n\n  console.log('Expense Item is evaluated by React'); // this will be called when ever the expenseItem function is executed in this case we are using it 4 times so we will see 4 logs\n  // STATE is seperated on a per component bases\n\n  const clickHandler = () => {\n    // calling the function is managed by react when we call it then the component function will be executed again and it updates the title when the state changes\n    setTitle('Updated'); // setting a new value to the title\n\n    console.log([]); // the original state 'title' is being changed and logged\n  };\n\n  return (\n    /*#__PURE__*/\n    // easiest work around is wrapping into another div because we can only have one main element and it can have multiple elements inside\n    // toLocaleString() helps format date to\n    _jsxDEV(Card, {\n      className: \"expense-item\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n        date: props.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expense-item__description\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__price\",\n          children: [\"$ \", props.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickHandler,\n        children: \"Change Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  ); // <input type={'text'} className=\"inputPlace\" placeholder=\"type\"></input> \n};\n\n_s(ExpenseItem, \"GRopkWJm2lnKqLV76+BEVn089Gs=\");\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Volumes/Heshows1TB/React Practice/Section4ReactState/04-Events/src/components/Expenses/ExpenseItem.js"],"names":["React","useState","ExpenseDate","Card","ExpenseItem","props","setTitle","title","console","log","clickHandler","date","amount"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CACA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC7B;AACA;AACA,QAAM,CAAC,EAAD,EAAKC,QAAL,IAAiBL,QAAQ,CAACI,KAAK,CAACE,KAAP,CAA/B,CAH6B,CAI7B;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAL6B,CAM7B;AACA;;AAEA,QAAMC,YAAY,GAAG,MAAM;AACzB;AACAJ,IAAAA,QAAQ,CAAC,SAAD,CAAR,CAFyB,CAEJ;;AACrBE,IAAAA,OAAO,CAACC,GAAR,CAAY,EAAZ,EAHyB,CAGR;AAClB,GAJD;;AAKA;AAAA;AACE;AACA;AACA,YAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEJ,KAAK,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,2BAAf;AAAA,gCACE;AAAA,oBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,2BAAwCF,KAAK,CAACO,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAQ,QAAA,OAAO,EAAEF,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF,IAd6B,CA4B7B;AACD,CA7BD;;GAAMN,W;;KAAAA,W;AA+BN,eAAeA,WAAf","sourcesContent":["// a component in react is a Javascript function\nimport React, { useState } from \"react\"\nimport './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from \"../UI/Card\"\n// props objetcs recievs the key value pairs\n\nconst ExpenseItem = (props) => {\n  // wants a default state and updated function that udpates the value\n  // this tells react that we want to update or change -> component should be re-evaluated\n  const [[], setTitle] = useState(props.title)\n  //  array destructuring 1st current state value and 2nd value is a function for updating that value\n  console.log('Expense Item is evaluated by React');\n  // this will be called when ever the expenseItem function is executed in this case we are using it 4 times so we will see 4 logs\n  // STATE is seperated on a per component bases\n\n  const clickHandler = () => {\n    // calling the function is managed by react when we call it then the component function will be executed again and it updates the title when the state changes\n    setTitle('Updated'); // setting a new value to the title\n    console.log([]); // the original state 'title' is being changed and logged\n  }\n  return (\n    // easiest work around is wrapping into another div because we can only have one main element and it can have multiple elements inside\n    // toLocaleString() helps format date to\n    <Card className='expense-item'> \n      <ExpenseDate date={props.date} />\n      <div className='expense-item__description'>\n        <h2>{title}</h2>\n        <div className='expense-item__price'>$ {props.amount}</div>\n      </div>\n      <button onClick={clickHandler}>Change Title</button>\n      {/* adds an event listener to the butotn */}\n      {/* when button is clicked we want to change the title */}\n    </Card>\n  )\n  // <input type={'text'} className=\"inputPlace\" placeholder=\"type\"></input> \n}\n\nexport default ExpenseItem"]},"metadata":{},"sourceType":"module"}