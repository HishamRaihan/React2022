{"ast":null,"code":"var _jsxFileName = \"/Volumes/Heshows1TB/React Practice/Section5RenderingList&ConditionalContent/05-RenderisList-Conditional-Content/src/components/Expenses/ExpenseItem.js\";\n// a component in react is a Javascript function\nimport React from \"react\";\nimport './ExpenseItem.css';\nimport ExpenseDate from './ExpenseDate';\nimport Card from \"../UI/Card\"; // props objetcs recievs the key value pairs\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenseItem = props => {\n  // // wants a default state and updated function that udpates the value\n  // // this tells react that we want to update or change -> component should be re-evaluated\n  // const [title, setTitle] = useState(props.title)\n  // //  array destructuring 1st current state value and 2nd value is a function for updating that value\n  // console.log('Expense Item is evaluated by React');\n  // // this will be called when ever the expenseItem function is executed in this case we are using it 4 times so we will see 4 logs\n  // // STATE is seperated on a per component bases\n  // const clickHandler = () => {\n  //   // calling the function is managed by react when we call it then the component function will be executed again and it updates the title when the state changes\n  //   setTitle('Updated'); // setting a new value to the title\n  //   console.log(title); // the original state 'title' is being changed and logged\n  // }\n  return (\n    /*#__PURE__*/\n    // easiest work around is wrapping into another div because we can only have one main element and it can have multiple elements inside\n    // toLocaleString() helps format date to\n    _jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: \"expense-item\",\n        children: [/*#__PURE__*/_jsxDEV(ExpenseDate, {\n          date: props.date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expense-item__description\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: props.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"expense-item__price\",\n            children: [\"$ \", props.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)\n  ); // <input type={'text'} className=\"inputPlace\" placeholder=\"type\"></input> \n};\n\n_c = ExpenseItem;\nexport default ExpenseItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenseItem\");","map":{"version":3,"sources":["/Volumes/Heshows1TB/React Practice/Section5RenderingList&ConditionalContent/05-RenderisList-Conditional-Content/src/components/Expenses/ExpenseItem.js"],"names":["React","ExpenseDate","Card","ExpenseItem","props","date","title","amount"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB,C,CACA;;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACE;AACA;AACA;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,EAAC,cAAhB;AAAA,gCACE,QAAC,WAAD;AAAa,UAAA,IAAI,EAAEA,KAAK,CAACC;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,2BAAf;AAAA,kCACE;AAAA,sBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,6BAAwCF,KAAK,CAACG,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAHF,IAd6B,CA6B7B;AACD,CA9BD;;KAAMJ,W;AAgCN,eAAeA,WAAf","sourcesContent":["// a component in react is a Javascript function\nimport React from \"react\"\nimport './ExpenseItem.css'\nimport ExpenseDate from './ExpenseDate'\nimport Card from \"../UI/Card\"\n// props objetcs recievs the key value pairs\n\nconst ExpenseItem = (props) => {\n  // // wants a default state and updated function that udpates the value\n  // // this tells react that we want to update or change -> component should be re-evaluated\n  // const [title, setTitle] = useState(props.title)\n  // //  array destructuring 1st current state value and 2nd value is a function for updating that value\n  // console.log('Expense Item is evaluated by React');\n  // // this will be called when ever the expenseItem function is executed in this case we are using it 4 times so we will see 4 logs\n  // // STATE is seperated on a per component bases\n\n  // const clickHandler = () => {\n  //   // calling the function is managed by react when we call it then the component function will be executed again and it updates the title when the state changes\n  //   setTitle('Updated'); // setting a new value to the title\n  //   console.log(title); // the original state 'title' is being changed and logged\n  // }\n  return (\n    // easiest work around is wrapping into another div because we can only have one main element and it can have multiple elements inside\n    // toLocaleString() helps format date to\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>$ {props.amount}</div>\n        </div>\n        {/* adds an event listener to the butotn */}\n        {/* when button is clicked we want to change the title */}\n      </Card>\n    </li>\n  )\n  // <input type={'text'} className=\"inputPlace\" placeholder=\"type\"></input> \n}\n\nexport default ExpenseItem"]},"metadata":{},"sourceType":"module"}