{"ast":null,"code":"var _jsxFileName = \"/Volumes/Heshows1TB/React Practice/Section5RenderingList&ConditionalContent/05-RenderisList-Conditional-Content/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('2022');\n\n  const filterChangeHandler = selectedyear => {\n    setFilteredYear(selectedyear); // console.log('Expenses.js');\n    // console.log(selectedyear);\n  }; // filter returns a brand new array \n\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  }); // const arrayedItems = filteredExpenses.map((expense) =>\n  //   <ExpenseItem\n  //   // {/* key will help ract identify each individual item, since every item has a unique id */}\n  //     key={expense.id}\n  //     title={expense.title}\n  //     amount={expense.amount}\n  //     date={expense.date} />)\n  // message will be the default but if it greater than 0 then the list will get rendered\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem // {/* key will help ract identify each individual item, since every item has a unique id */}\n    , {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), expensesContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"VsY+CdjhJzXvjVXvetgq5EU6jt4=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Volumes/Heshows1TB/React Practice/Section5RenderingList&ConditionalContent/05-RenderisList-Conditional-Content/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedyear","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC5CF,IAAAA,eAAe,CAACE,YAAD,CAAf,CAD4C,CAE5C;AACA;AACD,GAJD,CAF0B,CAO1B;;;AACA,QAAMC,gBAAgB,GAAGL,KAAK,CAACM,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;AACrD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFwB,CAAzB,CAR0B,CAW1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIW,eAAe,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAtB;;AACA,MAAIP,gBAAgB,CAACQ,MAAjB,GAA0B,CAA9B,EAAiC;AAC/BD,IAAAA,eAAe,GAAGP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACrC,QAAC,WAAD,CACE;AADF;AAGE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAHjB;AAIE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAJlB;AAKE,MAAA,IAAI,EAAER,OAAO,CAACC;AALhB,OAEOD,OAAO,CAACS,EAFf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAOD;;AAED,sBACE;AAAA,2BAEE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BAEE,QAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEhB,YAA1B;AAAwC,QAAA,cAAc,EAAEE;AAAxD;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGS,eAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAxCD;;GAAMb,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\"\nimport ExpenseItem from \"./ExpenseItem\"\nimport Card from \"../UI/Card\"\nimport \"./Expenses.css\"\nimport ExpensesFilter from \"./ExpensesFilter\"\n\nconst Expenses = (props) => {\n  const [filteredYear, setFilteredYear] = useState('2022')\n  const filterChangeHandler = (selectedyear) => {\n    setFilteredYear(selectedyear)\n    // console.log('Expenses.js');\n    // console.log(selectedyear);\n  }\n  // filter returns a brand new array \n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear\n  })\n  // const arrayedItems = filteredExpenses.map((expense) =>\n  //   <ExpenseItem\n  //   // {/* key will help ract identify each individual item, since every item has a unique id */}\n  //     key={expense.id}\n  //     title={expense.title}\n  //     amount={expense.amount}\n  //     date={expense.date} />)\n  // message will be the default but if it greater than 0 then the list will get rendered\n  let expensesContent = <p>No expenses found</p>\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map((expense) =>\n      <ExpenseItem\n        // {/* key will help ract identify each individual item, since every item has a unique id */}\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date} />)\n  }\n\n  return (\n    <div>\n      {/* imitates a funciton call */}\n      <Card className=\"expenses\">\n        {/* controlled component */}\n        <ExpensesFilter selected={filteredYear} onChangeFilter={filterChangeHandler} />\n        {expensesContent}\n      </Card>\n    </div>\n  )\n}\n\nexport default Expenses"]},"metadata":{},"sourceType":"module"}