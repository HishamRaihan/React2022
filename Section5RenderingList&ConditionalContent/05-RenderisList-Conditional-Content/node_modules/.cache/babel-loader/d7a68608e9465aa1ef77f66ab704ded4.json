{"ast":null,"code":"var _jsxFileName = \"/Volumes/Heshows1TB/React Practice/Section5RenderingList&ConditionalContent/05-RenderisList-Conditional-Content/src/components/Expenses/ExpensesList.js\";\nimport React from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpensesList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpenesesList = props => {\n  // message will be the default but if it greater than 0 then the list will get rendered\n  const expenseStuff = props.items.length;\n\n  if (expenseStuff === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found No Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n\n  const arrayExpenses = props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem // {/* key will help ract identify each individual item, since every item has a unique id */}\n  , {\n    title: expense.title,\n    amount: expense.amount,\n    date: expense.date\n  }, expense.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: arrayExpenses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_c = ExpenesesList;\nexport default ExpenesesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpenesesList\");","map":{"version":3,"sources":["/Volumes/Heshows1TB/React Practice/Section5RenderingList&ConditionalContent/05-RenderisList-Conditional-Content/src/components/Expenses/ExpensesList.js"],"names":["React","ExpenseItem","ExpenesesList","props","expenseStuff","items","length","arrayExpenses","map","expense","title","amount","date","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,oBAAP;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC/B;AACA,QAAMC,YAAY,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAjC;;AACA,MAAIF,YAAY,KAAK,CAArB,EAAwB;AACtB,wBAAO;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAED;;AACD,QAAMG,aAAa,GAAGJ,KAAK,CAACE,KAAN,CAAYG,GAAZ,CAAiBC,OAAD,iBACpC,QAAC,WAAD,CACE;AADF;AAGE,IAAA,KAAK,EAAEA,OAAO,CAACC,KAHjB;AAIE,IAAA,MAAM,EAAED,OAAO,CAACE,MAJlB;AAKE,IAAA,IAAI,EAAEF,OAAO,CAACG;AALhB,KAEOH,OAAO,CAACI,EAFf;AAAA;AAAA;AAAA;AAAA,UADoB,CAAtB;AAQA,sBAAO;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,cACJN;AADI;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,CApBD;;KAAML,a;AAqBN,eAAeA,aAAf","sourcesContent":["import React from \"react\"\nimport ExpenseItem from \"./ExpenseItem\"\nimport \"./ExpensesList.css\"\n\nconst ExpenesesList = (props) => {\n  // message will be the default but if it greater than 0 then the list will get rendered\n  const expenseStuff = props.items.length\n  if (expenseStuff === 0) {\n    return <h2 className=\"expenses-list__fallback\">Found No Expenses</h2>\n\n  }\n  const arrayExpenses = props.items.map((expense) =>\n    <ExpenseItem\n      // {/* key will help ract identify each individual item, since every item has a unique id */}\n      key={expense.id}\n      title={expense.title}\n      amount={expense.amount}\n      date={expense.date}\n    />)\n  return <ul className=\"expenses-list\">\n    {arrayExpenses}\n  </ul>\n\n\n}\nexport default ExpenesesList"]},"metadata":{},"sourceType":"module"}