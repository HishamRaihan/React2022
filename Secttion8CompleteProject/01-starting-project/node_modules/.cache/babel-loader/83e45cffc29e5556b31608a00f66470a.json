{"ast":null,"code":"var _jsxFileName = \"/Users/hishamraihan/Desktop/React Practice/Secttion8CompleteProject/01-starting-project/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport Card from \"../UI/Card\";\nimport classes from './AddUser.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [enteredUsername, setEnteredUsername] = useState('');\n  const [enteredAge, setEnteredAge] = useState(''); // want to render something on the screen that allows user to\n  // enter a name, age and a button to confirm\n\n  const addUserHandler = event => {\n    event.preventDefault(); // validating the input\n\n    if (enteredUsername.trim().length === 0 || enteredAge.trim().length === 0) {\n      return;\n    } // force converts the string into a number\n\n\n    if (+enteredAge < 1) {\n      return;\n    }\n\n    props.onAddUser(enteredUsername, enteredAge);\n    setEnteredUsername('');\n    setEnteredAge('');\n  };\n\n  const userNameChangeHandler = event => {\n    setEnteredUsername(event.target.value);\n  };\n\n  const ageNameChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        value: enteredUsername,\n        onChange: userNameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age (Years)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"age\",\n        value: enteredAge,\n        onChange: ageNameChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"KlB6dcQFtu+2S16p6cjD6Kz8DMs=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/hishamraihan/Desktop/React Practice/Secttion8CompleteProject/01-starting-project/src/components/Users/AddUser.js"],"names":["React","useState","Button","Card","classes","AddUser","props","enteredUsername","setEnteredUsername","enteredAge","setEnteredAge","addUserHandler","event","preventDefault","trim","length","onAddUser","userNameChangeHandler","target","value","ageNameChangeHandler","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AAEvB,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C,CAHuB,CAIvB;AACA;;AAEA,QAAMU,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN,GADgC,CAEhC;;AACA,QAAGN,eAAe,CAACO,IAAhB,GAAuBC,MAAvB,KAAkC,CAAlC,IAAuCN,UAAU,CAACK,IAAX,GAAkBC,MAAlB,KAA6B,CAAvE,EAAyE;AACvE;AACD,KAL+B,CAMhC;;;AACA,QAAG,CAACN,UAAD,GAAa,CAAhB,EAAkB;AAChB;AACD;;AACDH,IAAAA,KAAK,CAACU,SAAN,CAAgBT,eAAhB,EAAiCE,UAAjC;AACAD,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACAE,IAAAA,aAAa,CAAC,EAAD,CAAb;AAED,GAdD;;AAeA,QAAMO,qBAAqB,GAAGL,KAAK,IAAI;AACrCJ,IAAAA,kBAAkB,CAACI,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD;;AAGA,QAAMC,oBAAoB,GAAGR,KAAK,IAAI;AACpCF,IAAAA,aAAa,CAACE,KAAK,CAACM,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEf,OAAO,CAACiB,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEV,cAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,KAAK,EAAEJ,eAAxC;AACE,QAAA,QAAQ,EAAEU;AADZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAIE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAME;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,KAAxB;AAA8B,QAAA,KAAK,EAAER,UAArC;AACE,QAAA,QAAQ,EAAEW;AADZ;AAAA;AAAA;AAAA;AAAA,cANF,eAQE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3CD;;GAAMf,O;;KAAAA,O;AA6CN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Button from \"../UI/Button\";\nimport Card from \"../UI/Card\";\nimport classes from './AddUser.module.css'\n\nconst AddUser = props => {\n\n  const [enteredUsername, setEnteredUsername] = useState('');\n  const [enteredAge, setEnteredAge] = useState('');\n  // want to render something on the screen that allows user to\n  // enter a name, age and a button to confirm\n\n  const addUserHandler = (event) => {\n    event.preventDefault()\n    // validating the input\n    if(enteredUsername.trim().length === 0 || enteredAge.trim().length === 0){\n      return\n    }\n    // force converts the string into a number\n    if(+enteredAge <1){\n      return\n    }\n    props.onAddUser(enteredUsername, enteredAge)\n    setEnteredUsername('')\n    setEnteredAge('')\n\n  }\n  const userNameChangeHandler = event => {\n    setEnteredUsername(event.target.value)\n  }\n  const ageNameChangeHandler = event => {\n    setEnteredAge(event.target.value)\n  }\n\n  return (\n    <Card className={classes.input}>\n      <form onSubmit={addUserHandler}>\n        <label htmlFor=\"username\">Username</label>\n        <input type=\"text\" id=\"username\" value={enteredUsername}\n          onChange={userNameChangeHandler} />\n        <label htmlFor=\"age\">Age (Years)</label>\n         {/* value will be updated after submitted */}\n        <input type=\"number\" id=\"age\" value={enteredAge}\n          onChange={ageNameChangeHandler} />\n        <Button type=\"submit\">Add User</Button>\n      </form>\n    </Card>\n  )\n}\n\nexport default AddUser"]},"metadata":{},"sourceType":"module"}